name: Build and Push result Image to docker hub and ECR

on:
  push:
    branches:
      - main
    paths:
      - 'result/**'
      - '.github/workflows/result-to-dh-ecr.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'result/**'
      - '.github/workflows/result-to-dh-ecr.yml'

jobs:
  build_to_docker_hub:
   name: Build and Push to Docker 
   runs-on: ubuntu-latest

   steps:
      # Step 1: Checkout repo code
      - name: Checkout code
        uses: actions/checkout@v3
        
         # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Step 4: Get the 7-character short SHA
      - name: Get short SHA
        run: echo "SHORT_SHA=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV

        # Step 5: Build and push Docker image from user-service folder
      - name: Build and Push result Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./result
          push: true
          tags: 
            ${{ secrets.DOCKERHUB_USERNAME }}/result-repo:${{ env.SHORT_SHA }}
    
  build_to_ECR:
       name: Build and Push to Docker Hub
       runs-on: ubuntu-latest
       steps:
    
   # Step 1: Checkout repo code
        - name: Checkout code
          uses: actions/checkout@v3
          
   # Step 2: Configure AWS credentials
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
      
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1  

      # Step 3: Log in to Amazon ECR
        - name: Log in to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2

      # Step 4: Set short SHA for tagging
        - name: Set short SHA
          id: vars
          run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

     # Step 5: Build and push result image
        - name: Build and push Docker image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: result-repo
            IMAGE_TAG: ${{ steps.vars.outputs.short_sha }}
          run: |
           docker build -t $ECR_REPOSITORY:$IMAGE_TAG ./result
           docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
           docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

          
